# -*- coding: utf-8 -*-
"""Atividade_Pratica_VictorJMarcolino.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UL5cMHbbpIh57tCZA5Rap7rnrRQXjcIG

Preparando Dados
"""

# prompt: leia o arquivo titanic.csv

import pandas as pd
from sklearn.model_selection import train_test_split

df = pd.read_csv('titanic.csv')

features = ['Pclass', 'Sex', 'Age', 'Fare', 'SibSp', 'Parch']

X = df[features] #Selecionando os atributos
X['Sex'] = X['Sex'].map({'male':0, 'female':1})

y = df['Survived']

X = X.fillna(X.mean()) #Trocando dados corrompidos pela média da coluna

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""Classificador Árvore de Decisão"""

from sklearn.tree import DecisionTreeClassifier
from sklearn.tree import export_text
from sklearn.metrics import accuracy_score


#Criando o classificador
decision_tree_classifier = DecisionTreeClassifier()

decision_tree_classifier.fit(X_train, y_train)

tree_rules = export_text(decision_tree_classifier, feature_names=features)

#print(tree_rules)

predictions = decision_tree_classifier.predict(X_test)

accuracy = accuracy_score(y_test, predictions)
print("Precisão: ", accuracy)

from sklearn.neural_network import MLPClassifier
from sklearn.metrics import accuracy_score

mlp = MLPClassifier(hidden_layer_sizes=(10, 5), max_iter=1000, random_state=42)

mlp.fit(X_train, y_train)

predictions = mlp.predict(X_test)

accuracy = accuracy_score(y_test, predictions)

print("Precisão: ", accuracy)